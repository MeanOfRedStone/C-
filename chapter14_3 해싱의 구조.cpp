//알고리즘 14.1 이상적인 해싱 알고리즘
add(key, value) :
	index <- hash_function(key)
	ht[index] = value
	
search(key) :
	index <- hash_function(key)
	return ht[index] 
	
/*
*/
1. 아래와 같이 10개의 버킷과 버킷 당 2개의 슬롯을 가지는 해시테이블이 있다.
해시 함수는 정수 데이터의 끝자리 숫자를 사용한다.
데이터(53, 374, 225, 557, 19, 100, 763, 812, 65, 710, 123, 818)가 순서대로 삽입될 경우에 해시 테이블에 데이터가 저장되는 과정을 보이고, 충돌 횟수와 오버 플로우 횟수를 답하라.

(1)
3 | 	53

(2)

3 | 	53
4 |		374

(3)
3 | 	53
4 |		374
5 |		225

(4)
3 | 	53
4 |		374
5 |		225
7 |		557

(5)
3 | 	53
4 |		374
5 |		225
7 |		557
9 |		19

(6)
0 |		100
3 | 	53
4 |		374
5 |		225
7 |		557
9 |		19

(7) 763 삽입 | 충돌:1 
0 |		100
3 | 	53 |	765
4 |		374
5 |		225
7 |		557
9 |		19

(8) 812 삽입 | 충돌:1 
0 |		100
2 |		812
3 | 	53 |	763
4 |		374
5 |		225
7 |		557
9 |		19

(9) 65 삽입 | 충돌 :2 
0 |		100
2 |		812
3 | 	53 	|	763
4 |		374
5 |		225	|	65	
7 |		557
9 |		19

(10) 710 삽입 | 충돌 : 3 
0 |		100	|	710
2 |		812
3 | 	53 	|	763
4 |		374
5 |		225	|	65	
7 |		557
9 |		19

(11) 123 삽입 | 충도 : 3 , 오버플로우 : 1

(12) 818 삽입 | 충돌 : 3 , 오버플로우 : 1 
0 |		100	|	710
2 |		812
3 | 	53 	|	763
4 |		374
5 |		225	|	65	
7 |		557
8 |		818
9 |		19

