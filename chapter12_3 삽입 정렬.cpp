//프로그램 12.3 삽입 정렬 프로그램

void insertion_sort(int list[], int n)
{
	int i, j , key;
	for(i = 1; i < n; i++){
		key = list[i];
		
		//key 값이 가장 작은 경우 j <- '-1'로 끝남 
		for(j = i - 1; j >= 0 && list[j] > key; j--){
			list[j + 1] = list[j]; 
		}
	}
	list[j + 1] = key;
} 


/*
1. 삽입정렬이 아래의 key를 정렬할 때 key의 자리 변화를 단계별로 보여라. 

3 | 7 | 9 | 4 | 1 | 6

1단계)
""
2단계)
""
3단계 )
3 | 4 | 7 | 9 | 1 | 6
4단계)
1 | 3 | 4 | 7 | 9 | 6
5단계)
1 | 3 | 4 | 6 | 7 | 9 | 

2. 삽입정렬이 안정성을 만족하는 이유를 설명하라.
인덱스의 역순부터 이동하기 때문이다.
*/ 
